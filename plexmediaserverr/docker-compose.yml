version: '3.9'

services:

  plex:
    image: plexinc/pms-docker
    container_name: plex
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
      - HOSTNAME=”PlexServer”
      - TZ=America/Denver
    volumes:
      - ./provision/plex:/config
      - ./content/media:/data/media
    network_mode: host
    # ports: # when network: bridge
    #   - "32400:32400/tcp"
    #   - "8324:8324/tcp" # Required if network: bridge
    #   - "32469:32469/tcp" # Required if network: bridge
    #   - "1900:1900/udp" # Required if network: bridge
    #   - "32410:32410/udp" # Required if network: bridge
    #   - "32412:32412/udp" # Required if network: bridge
    #   - "32413:32413/udp" # Required if network: bridge
    #   - "32414:32414/udp" # Required if network: bridge
    privileged: true # libusb_init failed
    restart: unless-stopped
    # networks:
    #   - media-network

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - ./provision/radarr:/config
      - ./content:/data
    ports:
      - "7878:7878"
    restart: unless-stopped
    networks:
      - media-network

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - ./provision/sonarr:/config
      - ./content:/data
    ports:
      - "8989:8989"
    restart: unless-stopped
    networks:
      - media-network

  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - ./provision/lidarr:/config
      - ./content:/data
    ports:
      - "8686:8686"
    restart: unless-stopped
    networks:
      - media-network

  prowlarr:
    image: linuxserver/prowlarr
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - ./provision/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped
    networks:
      - media-network

  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - ./provision/bazarr:/config
      - ./content:/data
    ports:
      - "6767:6767"
    restart: unless-stopped
    networks:
      - media-network

  qbittorrent:
    image: linuxserver/qbittorrent
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - ./provision/qbittorrent:/config
      - ./content/torrents:/data/torrents
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - media-network

#  jackett:
#    image: linuxserver/jackett
#    container_name: jackett
#    environment:
#      - PUID=1000
#      - PGID=1000
#      - TZ=America/Denver
#    volumes:
#      - ./provision/jackett:/config
#    ports:
#      - "9117:9117"
#    restart: unless-stopped
#    networks:
#      - media-network

#  ombi:
#    image: linuxserver/ombi
#    container_name: ombi
#    environment:
#      - PUID=1000
#      - PGID=1000
#      - TZ=America/Denver
#    volumes:
#      - ./provision/ombi:/config
#    ports:
#      - "3579:3579"
#    restart: unless-stopped
#    networks:
#      - media-network

  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Denver
    volumes:
      - ./provision/overseerr:/config
    ports:
      - "5055:5055"
    restart: unless-stopped
    networks:
      - media-network

## Watchtower upgrades services automatically (optional)
## activate via "COMPOSE_PROFILES=update docker compose up -d"
  watchtower:
    restart: unless-stopped
    image: containrrr/watchtower
    profiles: ["update"]
    environment:
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_POLL_INTERVAL: 7200 # checks for updates every two hours
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
#      - "~/.docker/config.json:/config.json" # optional, for authentication if you have a Docker Hub account

#  heimdall:
#    image: linuxserver/heimdall
#    container_name: heimdall
#    environment:
#      - PUID=1000
#      - PGID=1000
#      - TZ=Europe/Sofia
#    volumes:
#      - ./provision/heimdall:/config
#    ports:
#      - "80:80"
#      - "443:443"
#      # - "8083:80"
#    restart: unless-stopped
#    networks:
#      - media-network

networks:
  media-network:
